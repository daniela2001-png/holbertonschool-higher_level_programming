The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is an example text file in reStructuredText format.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided


Now use it:

    >>> matrix_divided([[]], 3)
    [[]]

    >>> matrix_divided([[2, 3, 4]], 1)
    [[2.0, 3.0, 4.0]]

    >>> matrix_divided([[2], [2]], 2)
    [[1.0], [1.0]]

    >>> matrix_divided([[1, 2, 3]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided([[-2, 1, 2, 3, 4], [-2, 1, 2, 3, "hello"]], 5)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix(list of lists) of integers/floats

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> matrix_divided([[], [2, 3, 4]], 78)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[]], 2, 3)
    Traceback (most recent call last):
    TypeError: matrix_divided() takes 2 positional arguments but 3 were given

    >>> matrix_divided([], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix(list of lists) of integers/floats

    >>> matrix_divided({}, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix(list of lists) of integers/floats

    >>> matrix_divided([[], [1, 2, 3]], 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size


