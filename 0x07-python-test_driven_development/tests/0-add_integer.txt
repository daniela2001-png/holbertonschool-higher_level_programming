The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

This is an example text file in reStructuredText format.  First import
``add_integer`` from the ``add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer


Now use it:

    >>> add_integer(6, 6)
    12

    >>> add_integer(4, -2)
    2

    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer('muu')
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(-22.6487364576573465734344, "gdgvgdsgcusdch55367485oijkhjgfhdgscvb")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(nan)
    Traceback (most recent call last):
    NameError: name 'nan' is not defined

    >>> add_integer(['a', 'b', 'c'], {"hola": "dani"})
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(0/0, -2)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> add_integer(2 ** 10)
    1122

    >>> add_integer(float("inf"))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(float("-inf"))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer


    >>> add_integer(((-1) ** (1/2)), (-1) ** (1/2))
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(tuple(1))
    Traceback (most recent call last):
    TypeError: 'int' object is not iterable